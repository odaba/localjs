{
	"data_table_en.html" : "data_table_cn.html",
	"new_window_en.html" : "new_window_cn.html",

	"years_old" : " 岁",
	"Male" : "男",
	"Female" : "女",
	"formatDate" : function(dt)
					{
						return dt.getFullYear() + "年" + (dt.getMonth() + 1) + "月" + dt.getDate() + "日";
					},
	"Name should not be empty." : "姓名不能为空。",
	"Please fill with valid non-negative integer." : "请填入有效的正整数。",
	"Name" : "姓名",
	"Save" : "保存",
	"Cancel" : "取消",
	"Age" : "年龄",
	"Gender" : "性别",
	"Start Day" : "入职日期",
	"Please choose month" : "请选择月份",
	"Please input year" : "请输入年份",
	"Goto" : "转到",
	"Please input valid year" : "请输入有效的年份。",
	"Open_with_ADO_1st" : "下面将用ADO打开 ",
	"Open_with_ADO_2nd" : "",
	"Open_with_Excel_1st" : "在Excel中打开 ",
	"Open_with_Excel_2nd" : "",
	"excel_changes" : "在本窗口内编辑表格内容，Excel 中的内容会实时改变。",
	"table_reminder" : "点击 表头 可以排序；\n点击 内容 可以编辑。 \n注意 修改日期时 弹出的对话框 已经本地化了。",

	'demo_google_dialog_1' : '<div style="text-align:center">当用户点击了页面上的一个链接之后，LOCALJS.UI.newWindowCallback 会被调用。可以在该回调函数中决定是否打开此链接。<br/><br/><span></span><br/><br/><select><option value="0"></option><option value="1">在新窗口中打开</option><option value="2">在Internet Explorer中打开</option></select></div>',

	'demo_google_dialog_2' : '<div>函数LOCALJS.UI.createBrowser在打开新窗口的同时，可以将一个 JavaScript 函数插入到新窗口的页面中运行：它可以修改新页面的内容，也可以在窗口之间实现互操作。</div>',

	'Are you going to open' : "是否要打开",
	"Don't open" : '不打开',

	'demo_new_window_dialog_1' : '<div>大多数情况下，使用HTML的Dialog已经足够好。<br/>可以用CSS为HTML Dialog定制不同的样式，用JavaScript实现Dialog弹出的动态效果。<br/>HTML Dialog和主体HTML页面共享全局的数据和函数。<br/><br/>然而如果确实要打开另外的窗口，也很简单：<div style="text-align:center;padding-top:10px"><a href="#">点击这里打开新窗口</a></div></div>',

	'demo_new_window_dialog_2' : '这个ListBox将和多个新窗口中的ListBox都保持同步：',

	"Next, move the window 10 pixels to left" : "下面将把本窗口向左移动10个像素",

	"Next, a file open dialog will be popped up, special for iexplore.exe" : "下面将弹出一个文件选择对话框，专门选择iexplore.exe",

	"Internet Explorer Executable File" : "Internet Explorer 可执行文件",

	"Please Choose Executable File of Internet Explorer" : "请选择Internet Explorer的可执行文件",

	"The file open dialog was canceled" : "您取消了文件对话框",

	"The file just selected is" : "刚才选择的文件是",

	"demo_thread_wording_1" : function(threadId)
								{
									return "在主线程中的函数func_passed_to_thread 中，当前线程ID: " + threadId + "\n下面调用由新线程传来的函数function_passed_from_thread";
								},

	"demo_thread_wording_2" : "准备创建新线程，主线程的线程ID: ",

	"demo_thread_wording_3" : "LocalJS的线程同步很简单",

	"demo_thread_wording_4" : function(threadId)
								{
									return "新线程（线程ID：" + threadId + "）执行结束。";
								},

	'New Thread' : '新线程',

	'script_thread_wording_1' : '在新线程中的函数function_passed_to_main_thread中，当前线程ID: ',

	'script_thread_wording_2' : '在新线程中，新线程的线程ID: ',

	'script_thread_wording_3' : '下面调用从主线程传来的函数',

	'script_thread_wording_4' : '下面新线程将睡眠10秒钟',

	'script_thread_wording_5' : '在新线程中，从主线程传来的字符串是：',

	"demo_webservice_wording_1" : "LocalJS 示例 Web Service 返回 JSON 字符串：",

	"demo_webservice_wording_2" : "用JavaScript很容易解析JSON格式，得到：",

	"demo_webservice_wording_3" : "LocalJS 示例 Web Service 调用失败，http 错误码为",

	"exit_confirm_wording" : "这个确认是在 exit_confirm.js 中实现的：\n\n确定要退出？",

	"auto_start_ok_wording" : "启动Windows 的时候将启动本演示程序。",

	"auto_start_no_wording" : "启动Windows 的时候不再启动本演示程序。"
}